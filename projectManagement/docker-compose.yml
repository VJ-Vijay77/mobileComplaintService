version: '3'

services:

  customer:
    container_name: customer
    build: 
      context: ./../customer-Service
      dockerfile: ./../customer-Service/customer.dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
    networks:
      default:  
  
  authentication:
    container_name: authentication
    build:
      context: ./../authentication-Service
      dockerfile: ./../authentication-Service/auth.dockerfile
    restart: always
    ports:
      - "8081:8081"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
    networks:
      default:  

  associate:
    container_name: associate
    build:
      context: ./../associate-Service
      dockerfile: ./../associate-Service/associate.dockerfile
    restart: always
    ports:
      - "8082:8082"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
      - customer
    networks:
      default:    

  postgres:
    image: 'postgres:14.2'
    container_name: postgres
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: vijay
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: services
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql  
    

  # adminer:
  #   image: adminer:latest
  #   container_name: adminer
  #   restart: always
  #   ports:
  #     - "9090:8080"
  #   links:
  #     - postgres
  #   depends_on:
  #     - postgres
  
networks:
  default:
   